%\VignetteKeywords{genomation}
%\VignettePackage{genomation}
%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{genomation: User Guide}
% !Rnw weave = knitr
\documentclass{article}
\usepackage{geometry}
\usepackage{wrapfig}

\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}


\title{genomation - a toolkit for annotation and visualization of genomic data}

\author{Altuna Akalin\\ \texttt{altuna.akalin@fmi.ch}\\
\and
Vedran Franke \\ \texttt{vedran.franke@gmail.com} }




\newcommand{\Rpackage}[1]{{\textit{#1}}}



<<setup2, include=FALSE, cache=FALSE>>=
library(knitr)
options(replace.assign=TRUE,width=50)
opts_chunk$set(root.dir=getwd(),
               fig.path='inst/doc/Figures', 
               cache.path='cache/graphics-', 
               fig.align='center', 
               dev='pdf', 
               fig.width=5, 
               fig.height=5, 
               fig.show='hold', 
               cache=FALSE,
               par=TRUE)
knit_hooks$set(par=function(before, options, envir){
if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1),cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
}, crop=hook_pdfcrop)
@

\begin{document}
\maketitle
\tableofcontents

% ----------------------------------------------------------------- %
\section{Introduction}

Recent advances in sequencing technologies have enabled a downpoor of biological data. The sheer amount of data has impeeded the extraction of useful knowledge and novel hypothesis generation.
\begin{wrapfigure}{r}{0.4\textwidth}
 \vspace{-20pt}
  \begin{center}
    \includegraphics[width=0.4\textwidth]{Figures/genomationFlowChart1.pdf}
  \end{center}
  \caption{Bulk visualization for different genomic feature datasets flowchart}
   \vspace{-20pt}
\end{wrapfigure} 
\Rpackage{genomation} is a toolkit for annotation and in bulk visualization of 
genomic features (scored or unscored) over predefined regions. The \textbf{genomic features} the package can handle can be  anything with a minimal information of chromosome,start and end. The features could have any length
and most of the time they are associated with a score. Typical examples of such data sets include aligned reads from high-throughput sequencing (HTS) experiments, percent
methylation values for CpGs (or other cytosines), locations of transcription factor binding site motifs, and so on. On the other hand, throughout the vignette we use the phrase "genomic annotation" to refer to the regions of the genome associated with a potential function and do not necessarily have a score (examples: CpG islands, genes, enhancers, promoter, exons, etc. ). These genomic annotations are usually the regions of interest, and distribution of genomic features over/around the annotations are can make the way for biological interpretation of the data.


The pipeline for computational knowledge extraction consists of three steps: data filtering, integration of data from multiple sources or generation of predictive models and biological interpretation of produced models, which leads to novel hypotheses that can be tested in the wetlab. \Rpackage{genomation} aims to facilitate the integration of multiple sources of genomic features with genomic annotation or already published experimental results.
\\*

% ----------------------------------------------------------------- %
\section{Access the data}

High-throughput data which will be used to show the functonality of the \Rpackage{genomation} is located in two places. The annotation and cap analysis of gene expression (CAGE) data comes prepared with the genomation package, while the raw HTS data can be found in the sister package \Rpackage{genomationData}.\\
To install the data package from bioconductor c/p the following lines into your R interpreter:

<<genomationData, eval=FALSE>>=
library(devtools)
install_github("genomationData",username='frenkiboy')
@

The \Rpackage{genomationData} vignette contains a verbose description of contained files.\\
To list the available data:
<<listGenomationData, eval=FALSE>>=
list.files(system.file('extdata',package='genomationData'))
@

To see the descriptions of the files:
<<genomationDataInfo, eval=FALSE, tidy=TRUE>>=
r = read.table(system.file('extdata/SamplesInfo.txt',package='genomationData'),header=T, sep='\t')
head(r)
@

% ----------------------------------------------------------------- %
\section{Data input}
\Rpackage(genomation) has functions to read genomic features and genomic annotation 
provided they are in a tabular format. In addition, BAM files can be also utilized in
core \Rpackage(genomation) functions. These functions will read the data from 
flat files and create GRanges or GRangesList objects.
<<readExamples1, eval=FALSE, tidy=TRUE>>=
library(genomation)
file.to.read1=system.file("extdata", "chr21.CpGi.hg19.bed", package = "genomation")
readBed(file.to.read1)

readBroadPeak()

readGeneric()
@
There are specific functions to read genomic annotation from flat bed files.
<<readExamples2, eval=FALSE, tidy=TRUE>>=
# reading genes stored as a BED files
readGeneFeatures()

# reading CpGi islands and shores stored as a BED files
readFeatureFlank()

@

% ----------------------------------------------------------------- %
\section{Extraction of genomic features over predefined windows}
You can extract 

% ----------------------------------------------------------------- %
\section{Annotation of genomic features}


% ----------------------------------------------------------------- %
\section{Use cases for genomation package}
The genomation package provides generalizable functions for genomic data analysis
and visualization. Below we will demonstrate the functionality on specific use cases

% ----------------------------------------------------------------- %
\subsection{Annotation of HTS data by functional regions}


% ----------------------------------------------------------------- %
\subsection{Visualization of ChiP sequencing data}

We will visualize the binding profiles of 6 transcription factors around the 
Ctcf binding sites. 

In the fist step we will select the *.bam files containing mapped reads.
<<selectBamChipseq, eval=TRUE, tidy=TRUE, echo=FALSE>>=
library(genomation)
library(GenomicRanges)
genomationDataPath = system.file('extdata',package='genomationData')
bam.files = list.files(genomationDataPath, full.names=T, pattern='bam$')
@

Now we will read in the Ctcf peaks from human chromosome 21, and order them by 
their p values.
<<readCtcfPeaks, eval=TRUE, tidy=TRUE, echo=FALSE>>=
ctcf.peaks = readBroadPeak(file.path(genomationDataPath, 'wgEncodeBroadHistoneH1hescCtcfStdPk.broadPeak.gz'))
ctcf.peaks = ctcf.peaks[order(ctcf.peaks$pvalue)]
ctcf.peaks = ctcf.peaks[seqnames(ctcf.peaks) == 'chr21']
@


In order to extract the coverage values of all transcription factors around 
chipseq peaks, we will use the \Rcode{ScoreMatrixList} function.
<<ctcfScoreMatrixList, eval=TRUE, tidy=TRUE, echo=FALSE>>=
sml = ScoreMatrixList(l=bam.files[1], ctcf.peaks, bin.num=20)

@


% ----------------------------------------------------------------- %
\subsection{Annotation of bam files}


\end{document}


